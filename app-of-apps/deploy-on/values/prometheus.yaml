alertmanager:
  enabled: true
  ingress:
    # annotations: # Descomentar se tiver com o cert-manager configurado
    #   cert-manager.io/cluster-issuer: letsencrypt-prod
    # tls: # Descomentar se tiver com o cert-manager configurado
    # - hosts:
    #   - alertmanager.localhost  # Substitua pelo seu domínio
    #   secretName: letsencrypt-alertmanager
    enabled: true
    ingressClassName: nginx
    hosts:
      - alertmanager.localhost
    path: /
    pathType: Prefix
grafana:
  ingress:
    # annotations: # Descomentar se tiver com o cert-manager configurado
    #   cert-manager.io/cluster-issuer: letsencrypt-prod
    # tls: # Descomentar se tiver com o cert-manager configurado
    # - hosts:
    #   - monitoramento.localhost  # Substitua pelo seu domínio
    #   secretName: letsencrypt-monitoramento
    enabled: true
    ingressClassName: nginx
    hosts:
      - monitoramento.localhost
    path: /
    pathType: Prefix
prometheus:
  ingress:
    # annotations: # Descomentar se tiver com o cert-manager configurado
    #   cert-manager.io/cluster-issuer: letsencrypt-prod
    # tls: # Descomentar se tiver com o cert-manager configurado
    # - hosts:
    #   - prometheus.localhost  # Substitua pelo seu domínio
    #   secretName: letsencrypt-prometheus
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.localhost
    path: /
    pathType: Prefix
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
defaultRules:
  rules:
    kubeSchedulerAlerting: false
    kubeProxy: false
    kubeControllerManager: false
coreDns:
  serviceMonitor:
    enabled: false
kubeScheduler:
  serviceMonitor:
    enabled: false

